cmake_minimum_required(VERSION 3.22)
if(NOT(CMAKE_CXX_COMPILER_LOADED))
    set(CMAKE_CXX_COMPILER "/opt/homebrew/opt/llvm/bin/clang++")
    set(CMAKE_CXX_STANDARD 23)
    set(CMAKE_CXX_EXTENSIONS OFF)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
endif()
project(metal_test)

set(ADD_FOUNDATION_FRAMEWORK "-framework Foundation")
set(ADD_METAL_FRAMEWORK "-framework Metal")
set(ADD_METALKIT_FRAMEWORK "-framework MetalKit")
set(CPP_RUNTIME_LIBRARY "-stdlib=libc++")
#set(OBJ_C_NO_ARC "-fno-objc-arc")
#set(G_FLAG "-g")
#set(O_FLAG "-O2")

set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${ADD_FOUNDATION_FRAMEWORK}")
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${ADD_METAL_FRAMEWORK}")
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${ADD_METALKIT_FRAMEWORK}")
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${CPP_RUNTIME_LIBRARY}")
#set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${OBJ_C_NO_ARC}")
#set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${G_FLAG}")
#set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${O_FLAG}")

add_executable(metal_test main.cpp)
target_link_libraries(metal_test PRIVATE metal_math)
target_link_libraries(metal_test PUBLIC normal_math)
target_link_directories(metal_test PUBLIC ${HOMEBREW_DIR})
target_include_directories(metal_test PUBLIC ${HOMEBREW_INCLUDE})
